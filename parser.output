
state 0
	$accept: .start $end 

	NUMBER  shift 5
	IDENTIFIER  shift 6
	LET  shift 9
	'-'  shift 8
	'('  shift 7
	.  error

	expr  goto 3
	assignment  goto 4
	start  goto 1
	program  goto 2

state 1
	$accept:  start.$end 
	start:  start.program 

	$end  accept
	NUMBER  shift 5
	IDENTIFIER  shift 6
	LET  shift 9
	'-'  shift 8
	'('  shift 7
	.  error

	expr  goto 3
	assignment  goto 4
	program  goto 10

state 2
	start:  program.    (1)

	.  reduce 1 (src line 19)


state 3
	program:  expr.SEPARATOR 
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 

	SEPARATOR  shift 11
	'+'  shift 12
	'-'  shift 13
	'*'  shift 14
	'/'  shift 15
	.  error


state 4
	program:  assignment.SEPARATOR 

	SEPARATOR  shift 16
	.  error


state 5
	expr:  NUMBER.    (5)

	.  reduce 5 (src line 28)


state 6
	expr:  IDENTIFIER.    (6)

	.  reduce 6 (src line 30)


state 7
	expr:  '('.expr ')' 

	NUMBER  shift 5
	IDENTIFIER  shift 6
	'-'  shift 8
	'('  shift 7
	.  error

	expr  goto 17

state 8
	expr:  '-'.expr 

	NUMBER  shift 5
	IDENTIFIER  shift 6
	'-'  shift 8
	'('  shift 7
	.  error

	expr  goto 18

state 9
	assignment:  LET.IDENTIFIER '=' expr 

	IDENTIFIER  shift 19
	.  error


state 10
	start:  start program.    (2)

	.  reduce 2 (src line 20)


state 11
	program:  expr SEPARATOR.    (3)

	.  reduce 3 (src line 23)


state 12
	expr:  expr '+'.expr 

	NUMBER  shift 5
	IDENTIFIER  shift 6
	'-'  shift 8
	'('  shift 7
	.  error

	expr  goto 20

state 13
	expr:  expr '-'.expr 

	NUMBER  shift 5
	IDENTIFIER  shift 6
	'-'  shift 8
	'('  shift 7
	.  error

	expr  goto 21

state 14
	expr:  expr '*'.expr 

	NUMBER  shift 5
	IDENTIFIER  shift 6
	'-'  shift 8
	'('  shift 7
	.  error

	expr  goto 22

state 15
	expr:  expr '/'.expr 

	NUMBER  shift 5
	IDENTIFIER  shift 6
	'-'  shift 8
	'('  shift 7
	.  error

	expr  goto 23

state 16
	program:  assignment SEPARATOR.    (4)

	.  reduce 4 (src line 25)


state 17
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  '(' expr.')' 

	'+'  shift 12
	'-'  shift 13
	'*'  shift 14
	'/'  shift 15
	')'  shift 24
	.  error


state 18
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  '-' expr.    (12)

	.  reduce 12 (src line 36)


state 19
	assignment:  LET IDENTIFIER.'=' expr 

	'='  shift 25
	.  error


state 20
	expr:  expr.'+' expr 
	expr:  expr '+' expr.    (7)
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 

	'*'  shift 14
	'/'  shift 15
	.  reduce 7 (src line 31)


state 21
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr '-' expr.    (8)
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 

	'*'  shift 14
	'/'  shift 15
	.  reduce 8 (src line 32)


state 22
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr '*' expr.    (9)
	expr:  expr.'/' expr 

	.  reduce 9 (src line 33)


state 23
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	expr:  expr '/' expr.    (10)

	.  reduce 10 (src line 34)


state 24
	expr:  '(' expr ')'.    (11)

	.  reduce 11 (src line 35)


state 25
	assignment:  LET IDENTIFIER '='.expr 

	NUMBER  shift 5
	IDENTIFIER  shift 6
	'-'  shift 8
	'('  shift 7
	.  error

	expr  goto 26

state 26
	expr:  expr.'+' expr 
	expr:  expr.'-' expr 
	expr:  expr.'*' expr 
	expr:  expr.'/' expr 
	assignment:  LET IDENTIFIER '=' expr.    (13)

	'+'  shift 12
	'-'  shift 13
	'*'  shift 14
	'/'  shift 15
	.  reduce 13 (src line 39)


14 terminals, 5 nonterminals
14 grammar rules, 27/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
54 working sets used
memory: parser 13/120000
13 extra closures
59 shift entries, 1 exceptions
12 goto entries
2 entries saved by goto default
Optimizer space used: output 40/120000
40 table entries, 0 zero
maximum spread: 14, maximum offset: 25
